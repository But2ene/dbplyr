% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/verb-arrange.R
\name{arrange.tbl_lazy}
\alias{arrange.tbl_lazy}
\title{Arrange rows by variables in a local lazy tibble}
\usage{
\method{arrange}{tbl_lazy}(.data, ...)
}
\arguments{
\item{.data}{A tbl. All main verbs are S3 generics and provide methods
for \code{\link[=tbl_df]{tbl_df()}}, \code{\link[dtplyr:tbl_dt]{dtplyr::tbl_dt()}} and \code{\link[dbplyr:tbl_dbi]{dbplyr::tbl_dbi()}}.}

\item{...}{Comma separated list of unquoted variable names, or expressions
involving variable names. Use \code{\link[=desc]{desc()}} to sort a variable in descending order.}
}
\value{
An object of the same class as \code{.data}.
}
\description{
Order tbl_lazy rows by an expression involving its variables.
}
\section{Missing values}{

When applied to \code{tbl_lazy}, the \code{\link[=arrange]{arrange()}} method sorts NAs first (at the
beginning) compared to the default sort behavior on data frames, which places
NA values last (at the end).
}

\examples{
library(dplyr)

dbplyr::memdb_frame(a = c(3, 4, 1, 2)) \%>\%
  arrange(a)

# tbl_lazy: NAs sorted first
dbplyr::memdb_frame(a = c(3, 4, NA, 2)) \%>\%
  arrange(a)

# tbl_df: NAs sorted last
tibble(a = c(3, 5, NA, 2)) \%>\%
  arrange(a)

}
